package org.itri.ccma.tarsan.hibernate;
// Generated Sep 3, 2015 11:03:17 AM by Hibernate Tools 4.3.1
import com.fasterxml.jackson.annotation.JsonIgnore;import javax.persistence.GeneratedValue;import javax.persistence.SequenceGenerator;import javax.persistence.GenerationType;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Ad2user generated by hbm2java
 */
@SuppressWarnings("serial")@Entity
@Table(name = "ad2user")
public class Ad2user implements java.io.Serializable {

	private long ad2userId;
	private Ad ad;
	private Users users;
	private boolean clickedFlag;
	private boolean closedFlag;
	private String identifier;
	private Date createdDateTime;

	public Ad2user() {
	}

	public Ad2user(long ad2userId, Ad ad, Users users, boolean clickedFlag, boolean closedFlag, Date createdDateTime) {
		this.ad2userId = ad2userId;
		this.ad = ad;
		this.users = users;
		this.clickedFlag = clickedFlag;
		this.closedFlag = closedFlag;
		this.createdDateTime = createdDateTime;
	}

	public Ad2user(long ad2userId, Ad ad, Users users, boolean clickedFlag, boolean closedFlag, String identifier,
			Date createdDateTime) {
		this.ad2userId = ad2userId;
		this.ad = ad;
		this.users = users;
		this.clickedFlag = clickedFlag;
		this.closedFlag = closedFlag;
		this.identifier = identifier;
		this.createdDateTime = createdDateTime;
	}

	@SequenceGenerator(name="ad2user_seq", sequenceName="ad2user_ad2user_id_seq", allocationSize=1)	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="ad2user_seq")	@Id

	@Column(name = "ad2user_id", unique = true, nullable = false)
	public long getAd2userId() {
		return this.ad2userId;
	}

	public void setAd2userId(long ad2userId) {
		this.ad2userId = ad2userId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ad_id", nullable = false)
	@JsonIgnore	public Ad getAd() {
		return this.ad;
	}

	public void setAd(Ad ad) {
		this.ad = ad;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "users_id", nullable = false)
	@JsonIgnore	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "clicked_flag", nullable = false)
	public boolean isClickedFlag() {
		return this.clickedFlag;
	}

	public void setClickedFlag(boolean clickedFlag) {
		this.clickedFlag = clickedFlag;
	}

	@Column(name = "closed_flag", nullable = false)
	public boolean isClosedFlag() {
		return this.closedFlag;
	}

	public void setClosedFlag(boolean closedFlag) {
		this.closedFlag = closedFlag;
	}

	@Column(name = "identifier", length = 128)
	public String getIdentifier() {
		return this.identifier;
	}

	public void setIdentifier(String identifier) {
		this.identifier = identifier;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date_time", nullable = false, length = 29)
	public Date getCreatedDateTime() {
		return this.createdDateTime;
	}

	public void setCreatedDateTime(Date createdDateTime) {
		this.createdDateTime = createdDateTime;
	}

}
