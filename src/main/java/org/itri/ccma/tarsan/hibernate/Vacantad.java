package org.itri.ccma.tarsan.hibernate;

// Generated 2016/3/21 �U�� 01:28:50 by Hibernate Tools 3.4.0.CR1
import javax.persistence.GeneratedValue;import javax.persistence.SequenceGenerator;import javax.persistence.GenerationType;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Vacantad generated by hbm2java
 */
@SuppressWarnings("serial")@Entity
@Table(name = "vacantad", schema = "public")
public class Vacantad implements java.io.Serializable {

	private long vacantId;
	private Exuser exuser;
	private String type;
	private String size;
	private String position;
	private Date startdate;
	private Date enddate;
	private String intervaltime;
	private Boolean display;
	private Date createdate;
	private Date updatetime;
	private Boolean del;
	private Set <Price>prices = new HashSet<Price>(0);
	private Set <Location>locations = new HashSet<Location>(0);
	private Set <Buyad>buyads = new HashSet<Buyad>(0);

	public Vacantad() {
	}

	public Vacantad(long vacantId, Date createdate) {
		this.vacantId = vacantId;
		this.createdate = createdate;
	}

	public Vacantad(long vacantId, Exuser exuser, String type, String size,
			String position, Date startdate, Date enddate, String intervaltime,
			Boolean display, Date createdate, Date updatetime, Boolean del,
			Set <Price>prices, Set <Location>locations, Set <Buyad>buyads) {
		this.vacantId = vacantId;
		this.exuser = exuser;
		this.type = type;
		this.size = size;
		this.position = position;
		this.startdate = startdate;
		this.enddate = enddate;
		this.intervaltime = intervaltime;
		this.display = display;
		this.createdate = createdate;
		this.updatetime = updatetime;
		this.del = del;
		this.prices = prices;
		this.locations = locations;
		this.buyads = buyads;
	}

	@SequenceGenerator(name="vacantad_seq", sequenceName="vacantad_vacantad_id_seq", allocationSize=1)	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="vacantad_seq")	@Id
	@Column(name = "vacant_id", unique = true, nullable = false)
	public long getVacantId() {
		return this.vacantId;
	}

	public void setVacantId(long vacantId) {
		this.vacantId = vacantId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "exuser_id")
	public Exuser getExuser() {
		return this.exuser;
	}

	public void setExuser(Exuser exuser) {
		this.exuser = exuser;
	}

	@Column(name = "type", length = 128)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "size", length = 128)
	public String getSize() {
		return this.size;
	}

	public void setSize(String size) {
		this.size = size;
	}

	@Column(name = "position", length = 128)
	public String getPosition() {
		return this.position;
	}

	public void setPosition(String position) {
		this.position = position;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "startdate", length = 29)
	public Date getStartdate() {
		return this.startdate;
	}

	public void setStartdate(Date startdate) {
		this.startdate = startdate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "enddate", length = 29)
	public Date getEnddate() {
		return this.enddate;
	}

	public void setEnddate(Date enddate) {
		this.enddate = enddate;
	}

	@Column(name = "intervaltime", length = 128)
	public String getIntervaltime() {
		return this.intervaltime;
	}

	public void setIntervaltime(String intervaltime) {
		this.intervaltime = intervaltime;
	}

	@Column(name = "display")
	public Boolean getDisplay() {
		return this.display;
	}

	public void setDisplay(Boolean display) {
		this.display = display;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdate", nullable = false, length = 29)
	public Date getCreatedate() {
		return this.createdate;
	}

	public void setCreatedate(Date createdate) {
		this.createdate = createdate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updatetime", length = 29)
	public Date getUpdatetime() {
		return this.updatetime;
	}

	public void setUpdatetime(Date updatetime) {
		this.updatetime = updatetime;
	}

	@Column(name = "del")
	public Boolean getDel() {
		return this.del;
	}

	public void setDel(Boolean del) {
		this.del = del;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vacantad")
	public Set <Price>getPrices() {
		return this.prices;
	}

	public void setPrices(Set <Price>prices) {
		this.prices = prices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vacantad")
	public Set <Location>getLocations() {
		return this.locations;
	}

	public void setLocations(Set <Location>locations) {
		this.locations = locations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vacantad")
	public Set <Buyad>getBuyads() {
		return this.buyads;
	}

	public void setBuyads(Set <Buyad>buyads) {
		this.buyads = buyads;
	}

}
